print ("192472077 - bhargava")
def print_board(board):
    print("\n")
    for row in board:
        print(" | ".join(row))
        print("-" * 9)

def check_winner(board, player):
    # Check rows, columns, diagonals
    for i in range(3):
        if all([cell == player for cell in board[i]]):  # row
            return True
        if all([board[j][i] == player for j in range(3)]):  # column
            return True
    if all([board[i][i] == player for i in range(3)]):  # main diagonal
        return True
    if all([board[i][2 - i] == player for i in range(3)]):  # anti-diagonal
        return True
    return False

def is_full(board):
    return all(cell != ' ' for row in board for cell in row)

def get_move(player, board):
    while True:
        try:
            row = int(input(f"{player}'s turn. Enter row (0-2): "))
            col = int(input(f"{player}'s turn. Enter column (0-2): "))
            if board[row][col] == ' ':
                return row, col
            else:
                print("Cell already taken. Try again.")
        except (ValueError, IndexError):
            print("Invalid input. Enter numbers between 0 and 2.")

def play_game():
    board = [[' ' for _ in range(3)] for _ in range(3)]
    current_player = 'X'
    
    while True:
        print_board(board)
        row, col = get_move(current_player, board)
        board[row][col] = current_player
        
        if check_winner(board, current_player):
            print_board(board)
            print(f"Player {current_player} wins!")
            break
        elif is_full(board):
            print_board(board)
            print("It's a draw!")
            break
        
        current_player = 'O' if current_player == 'X' else 'X'

# Run the game
play_game()
